'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/study-backend/docs/frame/php/','title':"PHP 框架",'content':"PHP 框架 "});index.add({'id':1,'href':'/study-backend/docs/frame/python/','title':"Python 框架",'content':"Python 框架 "});index.add({'id':2,'href':'/study-backend/docs/db/redis/','title':"Redis",'content':"Redis "});index.add({'id':3,'href':'/study-backend/docs/mq/redis/','title':"Redis",'content':"Redis Kafka 是 linkedin 开源的 MQ 系统，主要特点是基于 Pull 的模式来处理消息消费，追求高吞吐量，一开始的目的就是用于日志收集和传输，0.8 开始支持复制，不支持事务，适合产生大量数据的互联网服务的数据收集业务。\n"});index.add({'id':4,'href':'/study-backend/docs/db/','title':"数据库",'content':"数据库 "});index.add({'id':5,'href':'/study-backend/docs/mq/activemq/','title':"ActiveMQ",'content':"ActiveMQ "});index.add({'id':6,'href':'/study-backend/docs/db/mysql/','title':"Mysql",'content':"Mysql "});index.add({'id':7,'href':'/study-backend/docs/mq/rocketmq/','title':"RocketMQ",'content':"RocketMQ "});index.add({'id':8,'href':'/study-backend/docs/frame/','title':"框架",'content':"后端框架 "});index.add({'id':9,'href':'/study-backend/docs/mq/','title':"消息队列",'content':"消息队列 ZeroMQ 和 RabbitMQ/Kafka 不同，它只是一个异步消息库，在套接字的基础上提供了类似于消息代理的机制。使用 ZeroMQ 的话，需要对自己的业务代码进行改造，不利于服务解耦。\nRabbitMQ 支持 AMQP（二进制），STOMP（文本），MQTT（二进制），HTTP（里面包装其他协议）等协议。Kafka 使用自己的协议。\nKafka 自身服务和消费者都需要依赖 Zookeeper。\nRabbitMQ 在有大量消息堆积的情况下性能会下降，Kafka 不会。毕竟 AMQP 设计的初衷不是用来持久化海量消息的，而 Kafka 一开始是用来处理海量日志的。\n参考  RabbitMQ, ZeroMQ, Kafka 是一个层级的东西吗？  "});index.add({'id':10,'href':'/study-backend/docs/mq/rabbitmq/','title':"RabbitMQ",'content':"RabbitMQ RabbitMQ 是一个 AMQP 实现，传统的 messaging queue 系统实现，基于 Erlang。老牌 MQ 产品了。AMQP 协议更多用在企业系统内，对数据一致性、稳定性和可靠性要求很高的场景，对性能和吞吐量还在其次。\n"});index.add({'id':11,'href':'/study-backend/docs/mq/zeromq/','title':"ZeroMQ",'content':"ZeroMQ ZeroMQ 只是一个网络编程的 Pattern 库，将常见的网络请求形式（分组管理，链接管理，发布订阅等）模式化、组件化，简而言之 socket 之上、MQ 之下。对于 MQ 来说，网络传输只是它的一部分，更多需要处理的是消息存储、路由、Broker 服务发现和查找、事务、消费模式（ack、重投等）、集群服务等。\n"});index.add({'id':12,'href':'/study-backend/categories/','title':"Categories",'content':""});index.add({'id':13,'href':'/study-backend/docs/','title':"Docs",'content':""});index.add({'id':14,'href':'/study-backend/tags/','title':"Tags",'content':""});index.add({'id':15,'href':'/study-backend/','title':"首页",'content':""});})();